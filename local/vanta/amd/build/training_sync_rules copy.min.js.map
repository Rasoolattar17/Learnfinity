{"version":3,"file":"training_sync_rules copy.min.js","sources":["../src/training_sync_rules copy.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable promise/catch-or-return */\n/* eslint-disable promise/always-return */\n\ndefine([\n    \"jquery\",\n], function(\n    $\n) {\n    // \"use strict\";\n    // var apiCredentials = {\n    //     dom: {\n    //         main: null,\n    //         clientIdField: null,\n    //         clientSecretField: null,\n    //         scopeField: null,\n    //         grantTypeField: null,\n    //         saveButton: null,\n    //         updateButton: null,\n    //         form: null,\n    //         togglePassword: null\n    //     },\n    //     lang: {\n    //         somethingWentWrong: null,\n    //         saveSuccess: null,\n    //         updateSuccess: null,\n    //         showPassword: null,\n    //         hidePassword: null\n    //     },\n    //     variables: {\n    //         recordId: 0\n    //     },\n    //     url: {\n    //         vanta: function() {\n    //             return moodleurl.relativeUrl('/local/vanta/training_sync_rules.php');\n    //         }\n    //     },\n    //     action: {\n    //         getstringvalues: function() {\n    //             console.log('getstringvalues');\n    //             str.get_strings([\n    //                 {\n    //                     key: \"some_thing_went_wrong\",\n    //                     component: \"local_vanta\"\n    //                 },\n    //                 {\n    //                     key: \"save_success\",\n    //                     component: \"local_vanta\"\n    //                 },\n    //                 {\n    //                     key: \"update_success\",\n    //                     component: \"local_vanta\"\n    //                 },\n    //                 {\n    //                     key: \"show_password\",\n    //                     component: \"local_vanta\"\n    //                 },\n    //                 {\n    //                     key: \"hide_password\",\n    //                     component: \"local_vanta\"\n    //                 }\n    //             ]).done(function(langstrs) {\n    //                 apiCredentials.lang.somethingWentWrong = langstrs[0];\n    //                 apiCredentials.lang.saveSuccess = langstrs[1];\n    //                 apiCredentials.lang.updateSuccess = langstrs[2];\n    //                 apiCredentials.lang.showPassword = langstrs[3];\n    //                 apiCredentials.lang.hidePassword = langstrs[4];\n    //                 apiCredentials.init();\n    //             }).fail(function() {\n    //                 notification.addNotification({\n    //                     type: \"error\",\n    //                     message: \"Failed to load language strings\",\n    //                 });\n    //             });\n    //         },\n\n    //         validateForm: function() {\n    //             var isValid = true;\n    //             if (apiCredentials.dom.clientIdField.val().trim() === \"\") {\n    //                 apiCredentials.dom.clientIdField.addClass('is-invalid');\n    //                 isValid = false;\n    //             } else {\n    //                 apiCredentials.dom.clientIdField.removeClass('is-invalid');\n    //             }\n    //             if (apiCredentials.dom.clientSecretField.val().trim() === \"\") {\n    //                 apiCredentials.dom.clientSecretField.addClass('is-invalid');\n    //                 isValid = false;\n    //             } else {\n    //                 apiCredentials.dom.clientSecretField.removeClass('is-invalid');\n    //             }\n    //             return isValid;\n    //         },\n\n    //         togglePasswordVisibility: function() {\n    //             var isPasswordVisible = apiCredentials.dom.clientSecretField.attr('type') === 'text';\n    //             var newType = isPasswordVisible ? 'password' : 'text';\n    //             var newIcon = isPasswordVisible ? 'fa-eye' : 'fa-eye-slash';\n    //             var oldIcon = isPasswordVisible ? 'fa-eye-slash' : 'fa-eye';\n    //             var newTitle = isPasswordVisible ? apiCredentials.lang.showPassword : apiCredentials.lang.hidePassword;\n\n    //             apiCredentials.dom.clientSecretField.attr('type', newType);\n    //             apiCredentials.dom.togglePassword.find('i.fa')\n    //                 .removeClass(oldIcon)\n    //                 .addClass(newIcon);\n    //             apiCredentials.dom.togglePassword.attr('title', newTitle);\n    //         },\n\n    //         saveCredentials: function() {\n    //             stLoader.showLoader();\n    //             var request = {\n    //                 methodname: 'local_vanta_save_credentials',\n    //                 args: {\n    //                     name: apiCredentials.dom.nameField.val(),\n    //                     clientid: apiCredentials.dom.clientIdField.val(),\n    //                     clientsecret: apiCredentials.dom.clientSecretField.val(),\n    //                     scope: apiCredentials.dom.scopeField.val(),\n    //                     granttype: apiCredentials.dom.grantTypeField.val()\n    //                 }\n    //             };\n    //             ajax.call([request])[0].done(function(response) {\n    //                 stLoader.hideLoader();\n    //                 if (response.success) {\n    //                     apiCredentials.variables.recordId = response.id;\n    //                     notification.addNotification({\n    //                         type: \"success\",\n    //                         message: apiCredentials.lang.saveSuccess || \"API credentials saved successfully\"\n    //                     });\n    //                     window.location.href = apiCredentials.url.vanta();\n    //                 } else {\n    //                     notification.addNotification({\n    //                         type: \"error\",\n    //                         message: response.message || apiCredentials.lang.somethingWentWrong\n    //                     });\n    //                 }\n    //             }).fail(function(error) {\n    //                 stLoader.hideLoader();\n    //                 notification.addNotification({\n    //                     type: \"error\",\n    //                     message: apiCredentials.lang.somethingWentWrong\n    //                 });\n    //                 console.error(error);\n    //             });\n    //         },\n\n    //         updateCredentials: function() {\n    //             stLoader.showLoader();\n    //             var request = {\n    //                 methodname: 'local_vanta_update_credentials',\n    //                 args: {\n    //                     name: apiCredentials.dom.nameField.val(),\n    //                     clientid: apiCredentials.dom.clientIdField.val(),\n    //                     clientsecret: apiCredentials.dom.clientSecretField.val(),\n    //                 }\n    //             };\n\n    //             ajax.call([request])[0].done(function(response) {\n    //                 stLoader.hideLoader();\n    //                 if (response.success) {\n    //                     notification.addNotification({\n    //                         type: \"success\",\n    //                         message: apiCredentials.lang.updateSuccess || \"API credentials updated successfully\"\n    //                     });\n    //                     window.location.href = apiCredentials.url.vanta();\n    //                 } else {\n    //                     notification.addNotification({\n    //                         type: \"error\",\n    //                         message: response.message || apiCredentials.lang.somethingWentWrong\n    //                     });\n    //                 }\n    //             }).fail(function(error) {\n    //                 stLoader.hideLoader();\n    //                 notification.addNotification({\n    //                     type: \"error\",\n    //                     message: apiCredentials.lang.somethingWentWrong\n    //                 });\n    //                 console.error(error);\n    //             });\n    //         }\n    //     },\n    //     init: function() {\n    //         apiCredentials.dom.main = $(\"#local_vanta_api_credentials\");\n    //         apiCredentials.dom.form = apiCredentials.dom.main.find(\"#vanta-config-form\");\n    //         apiCredentials.dom.nameField = apiCredentials.dom.main.find(\"#name\");\n    //         apiCredentials.dom.clientIdField = apiCredentials.dom.main.find(\"#client_id\");\n    //         apiCredentials.dom.clientSecretField = apiCredentials.dom.main.find(\"#client_secret\");\n    //         apiCredentials.dom.scopeField = apiCredentials.dom.main.find(\"#scope\");\n    //         apiCredentials.dom.grantTypeField = apiCredentials.dom.main.find(\"#grant_type\");\n    //         apiCredentials.dom.saveButton = apiCredentials.dom.main.find(\"#save_credentials\");\n    //         apiCredentials.dom.updateButton = apiCredentials.dom.main.find(\"#update_credentials\");\n    //         apiCredentials.dom.togglePassword = apiCredentials.dom.main.find(\".toggle-password\");\n\n    //         // Initialize password field as password type\n    //         apiCredentials.dom.clientSecretField.attr('type', 'password');\n\n    //         // Add toggle password event handler\n    //         apiCredentials.dom.togglePassword.on('click', function(e) {\n    //             e.preventDefault();\n    //             e.stopPropagation();\n    //             apiCredentials.action.togglePasswordVisibility();\n    //         });\n\n    //         // Form submission handler\n    //         apiCredentials.dom.form.on('submit', function(e) {\n    //             e.preventDefault();\n    //             if (apiCredentials.action.validateForm()) {\n    //                 apiCredentials.action.saveCredentials();\n    //             }\n    //         });\n\n    //         // Check if we have an existing record ID (for updates)\n    //         apiCredentials.variables.recordId = apiCredentials.dom.form.data('record-id') || 0;\n\n    //         if (apiCredentials.variables.recordId > 0) {\n    //             // We have an existing record, show update button\n    //             apiCredentials.dom.updateButton.removeClass('d-none');\n    //             apiCredentials.dom.saveButton.addClass('d-none');\n    //         } else {\n    //             // No existing record, show save button\n    //             apiCredentials.dom.saveButton.removeClass('d-none');\n    //             apiCredentials.dom.updateButton.addClass('d-none');\n    //         }\n    //     }\n    // };\n    return {\n        init: function() {\n            console.log('init');\n        }\n    };\n});"],"names":["define","$","init","console","log"],"mappings":"AAKAA,8CAAO,CACH,WACD,SACCC,SAwNO,CACHC,KAAM,WACFC,QAAQC,IAAI"}